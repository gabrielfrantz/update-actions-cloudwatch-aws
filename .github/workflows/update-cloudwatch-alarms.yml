name: Update CloudWatch Alarm SNS Topics

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Ambiente AWS'
        required: true
        type: choice
        options:
          - development
          - production
      
      alarm_list_file:
        description: 'Arquivo JSON com a lista de alarmes'
        required: true
        type: string
        default: 'alarms.json'
      
      topic_arn:
        description: 'ARN do tópico SNS a remover das actions'
        required: true
        type: string
      
      action:
        description: 'Ação a ser realizada'
        required: true
        type: choice
        options:
          - add
          - remove
      
      state_ok:
        description: 'Aplicar no estado OK'
        required: false
        type: boolean
        default: false
      
      state_in_alarm:
        description: 'Aplicar no estado IN_ALARM'
        required: false
        type: boolean
        default: false
      
      state_insufficient_data:
        description: 'Aplicar no estado INSUFFICIENT_DATA'
        required: false
        type: boolean
        default: false
      
      dry_run:
        description: 'Executar em modo dry-run (apenas visualizar)'
        required: false
        type: boolean
        default: true

jobs:
  update-alarms:
    runs-on: ubuntu-24.04
    environment: ${{ github.event.inputs.environment }}

    permissions:
      id-token: write
      contents: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      
      - name: Prepare states list
        id: prepare_states
        run: |
          STATES=""
          if [ "${{ github.event.inputs.state_ok }}" == "true" ]; then
            STATES="${STATES}OK,"
          fi
          if [ "${{ github.event.inputs.state_in_alarm }}" == "true" ]; then
            STATES="${STATES}IN_ALARM,"
          fi
          if [ "${{ github.event.inputs.state_insufficient_data }}" == "true" ]; then
            STATES="${STATES}INSUFFICIENT_DATA,"
          fi
          # Remove trailing comma
          STATES=$(echo "$STATES" | sed 's/,$//')
          
          if [ -z "$STATES" ]; then
            echo "Erro: Pelo menos um estado deve ser selecionado"
            exit 1
          fi
          
          echo "states=${STATES}" >> $GITHUB_OUTPUT
          echo "Estados selecionados: ${STATES}"
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Run dry-run (if enabled)
        if: github.event.inputs.dry_run == 'true'
        run: |
          python update_cloudwatch_alarms.py \
            --list-alarms "${{ github.event.inputs.alarm_list_file }}" \
            --action "${{ github.event.inputs.action }}" \
            --states "${{ steps.prepare_states.outputs.states }}" \
            --topic-arn "${{ github.event.inputs.topic_arn }}" \
            --dry-run
      
      - name: Update CloudWatch alarms
        if: github.event.inputs.dry_run == 'false'
        run: |
          python update_cloudwatch_alarms.py \
            --list-alarms "${{ github.event.inputs.alarm_list_file }}" \
            --action "${{ github.event.inputs.action }}" \
            --states "${{ steps.prepare_states.outputs.states }}" \
            --topic-arn "${{ github.event.inputs.topic_arn }}" 
